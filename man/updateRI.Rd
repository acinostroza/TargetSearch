% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/updateRI.R
\name{updateRI}
\alias{updateRI}
\title{Updating Time Index correction}
\usage{
updateRI(samples, rimLimits, RImatrix = NULL, quiet = TRUE)
}
\arguments{
\item{samples}{A \linkS4class{tsSample} object created by \link{ImportSamples}.}

\item{rimLimits}{A \linkS4class{tsRim} object. See \link{ImportFameSettings}.}

\item{RImatrix}{An optional matrix. It represents a retention time matrix of
the detected retention time markers that was obtained after running
\link{RIcorrect}}

\item{quiet}{Logical. Do not print a list of converted files.}
}
\value{
The retention index matrix. If \code{RImatrix} is not \code{NULL}, then the
output is the same matrix.
}
\description{
This function can be used to correct or adjust the detected retention time
index (RI) markers or their location to specific retention times. This
function adds on \code{\link[=fixRI]{fixRI()}} as it also corrects the RI of the CDF files
}
\details{
Sometimes the retention time of the RI markers are not detected correctly,
either because there was a problem with the standard, or the time limits of
the \linkS4class{tsRim} object were not set correctly, or simply because the markers
are not injected with the samples.

In any case, the retention time correction can be fixed by calling this
function. This function works almost exactly like \code{\link[=fixRI]{fixRI()}}, in fact, it
is called internally, and allows correction of RIfiles and CDFfiles at the
same time. Check also the documentation of \code{\link[=fixRI]{fixRI()}} for extra details.

The parameters are the \linkS4class{tsSample} and the \linkS4class{tsRim} object, with
optionally a \code{RImatrix} to force the location of the markers. The parameter
\code{quiet} can be unset to show what samples are corrected.

If only a subset of samples require correction, then they can be chosen by
subsetting the object \code{sample}.

Neededless to say, this function expect that the CDF files exists and are
in the TargetSearch format. If this is not the case, then use the function
\code{\link[=fixRI]{fixRI()}}, as this function deals only with RI files.
}
\note{
It is required that all the sample names of \code{samples} are contained in the
colnames of \code{RImatrix}, but the reverse is not necessary. The number of
columns of the output matrix will match the number of samples. Extra columns
in \code{RImatrix} will be ignored and not returned.
}
\examples{
require(TargetSearchData)
# import refLibrary, rimLimits and sampleDescription.
data(TSExample)
CDFpath(sampleDescription) <-
    file.path(find.package("TargetSearchData"), "gc-ms-data")

# convert a subset of files to netCDF4
smp <- ncdf4Convert(sampleDescription[1:6], path=".")

# make a copy of the RI markers object
fames <- rimLimits

# mess up the limits of marker 3 (real value is 369 seconds app.)
rimLimits(fames)[3,] <- c(375, 400)

# run RIcorrect (skip CDF-4 conversion)
RImat <- RIcorrect(smp, fames, Window = 15, IntThreshold = 200)

# fix the limits of marker 3
rimLimits(fames)[3,] <- c(360, 380)

# update RI files and CDF files
RImat <- updateRI(smp, fames)

# Pass a RI matrix for manual adjustment
RImat[, 3] <- c(252, 311, 369)
RImat <- updateRI(smp, fames, RImat)

# To select specific samples, simply use sample subsetting
# Note, RImat2 has only one column in this case.
( RImat2 <- updateRI(smp[3], fames, RImat) )

}
\seealso{
\code{\link[=fixRI]{fixRI()}}, \code{\link[=RIcorrect]{RIcorrect()}}, \code{\link[=ImportSamples]{ImportSamples()}}, \code{\link[=ImportFameSettings]{ImportFameSettings()}}
}
\author{
Alvaro Cuadros-Inostroza
}
